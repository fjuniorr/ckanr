on: [push, pull_request]

name: R-check

jobs:
  R-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'release'}
        - { os: windows-latest, r: 'devel'}
        - { os: macOS-latest, r: 'release'}
        - { os: ubuntu-latest,  r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.rspm }}
      CKANR_DEFAULT_KEY: ${{secrets.CKANR_DEFAULT_KEY}}
      CKANR_DEFAULT_URL: ${{secrets.CKANR_DEFAULT_URL}}
      CKANR_TEST_BEHAVIOUR: ${{secrets.CKANR_TEST_BEHAVIOUR}}
      CKANR_TEST_DID: ${{secrets.CKANR_TEST_DID}}
      CKANR_TEST_GID: ${{secrets.CKANR_TEST_GID}}
      CKANR_TEST_KEY: ${{secrets.CKANR_TEST_KEY}}
      CKANR_TEST_OID: ${{secrets.CKANR_TEST_OID}}
      CKANR_TEST_RID: ${{secrets.CKANR_TEST_RID}}
      CKANR_TEST_URL: ${{secrets.CKANR_TEST_URL}}
      TEST_API_KEY: ${{secrets.TEST_API_KEY}}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
        run: |
          Rscript -e 'install.packages("covr")' -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
