on: [push, pull_request]

name: R-check

jobs:
  R-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-latest,  r: 'release'}

    steps:
      - uses: actions/checkout@v3
      - name: Start containers
        run: docker compose -f docker-compose.yml up -d --build
      - name: LOG BEFORE CKAN CHECK...
        run: docker logs ckanr-ckan-1
      - name: Check if CKAN is up
        run: |
          curl --retry 5 --retry-delay 1  http://localhost:5000/api/3/action/status_show
      - name: Generate CKAN API token
        run: |
          echo "TEST_API_KEY=$(docker exec ckanr-ckan-1 ckan user token add ckan_admin dev_token | sed 's/API Token created://' | tr -d '\n\t')" >> $GITHUB_ENV
        if: matrix.ckan-version == '2.9'
      - name: Generate CKAN API key
        run: |
          echo "TEST_API_KEY"=$(docker exec ckanr-ckan-1 paster --plugin=ckan user ckan_admin | grep -o -P '(?<=apikey=).*(?= created)') >> $GITHUB_ENV
        if: matrix.ckan-version != '2.9'
      - name: Get value of TEST_API_KEY
        run: |
          curl -H "Authorization: ${{ env.TEST_API_KEY }}" http://localhost:5000/api/3/action/user_show?id=ckan_admin
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::covr
          needs: |
            check
            coverage

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: LOG AFTER CKAN CHECK...
        run: docker logs ckanr-ckan-1
